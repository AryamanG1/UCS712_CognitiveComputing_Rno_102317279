# -*- coding: utf-8 -*-
"""Aryaman_Gudwani_102317279_Lab4.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1tH1G-wQJKY2u74ZS6PiuNAbzaA1IUY-E
"""

# Q.1 Write a program to create a NumPy 1D-array with 5 elements and perform basic operations like:
# a)	Addition of 2 in all the element
# b)	Multiply 3 with all the elements
# c)	Divide every element by 2

import numpy as np

myFirstArr = np.array([1,2,3,4,5])

added2arr = myFirstArr+2
print(added2arr)

multiply3arr = myFirstArr*3
print(multiply3arr)

divide2arr = myFirstArr/2
print(divide2arr)

# Q.2 Questions on Basic NumPy Array:
# a)	Reverse the NumPy array: arr = np.array([1, 2, 3, 6, 4, 5])
# b)	Find the most frequent value and their indice(s) in the following arrays:
# i. x = np.array([1,2,3,4,5,1,2,1,1,1]) ii. y = np.array([1, 1, 1, 2, 3, 4, 2, 4, 3, 3, ])

arr = np.array([1, 2, 3, 6, 4, 5])

reverseArr = arr[::-1]
x = np.array([1,2,3,4,5,1,2,1,1,1])
y = np.array([1, 1, 1, 2, 3, 4, 2, 4, 3, 3])

countsx = np.bincount(x)
countsy = np.bincount(y)
print(np.argmax(countsx))
print(np.argmax(countsy))

# Q.3 For the given 2-D array arr=np.array([10, 20, 30], [40, 50, 60], [70, 80, 90]), access elements using row and column indices as follows:
# a)	Access 1st row, 2nd column
# b)	Access 3rd row, 1st column

arr=np.array([[10, 20, 30], [40, 50, 60], [70, 80, 90]])

print(arr[0,1])
print(arr[2,0])

# Q.4 Write program to create an 1-D NumPy array named <<Your Name>> with evenly spaced 25 numbers from 10 to 100 using linspace().
# Print the dimensions of the array, shape, total elements, the data type of each element and total number of bytes consumed by the array.
# Find the transpose of this array using reshape() attribute.
# Can we do the same with T attribute?

AryamanGudwani = np.linspace(10,100,num=25)
print(AryamanGudwani)

print(AryamanGudwani.shape)

print(AryamanGudwani.size)

print(AryamanGudwani.dtype)

print(AryamanGudwani.nbytes)

print(AryamanGudwani.reshape(AryamanGudwani.size,1))

sample = np.array([[1,2,3],[4,5,6]])
print(sample.T)

# Q5. Create a 2-D Array of three rows and four columns, named ucs420_<your_name>> with following values â€“ 10, 20, 30, 40, 50, 60, 70, 80, 90, 15, 20, 35.
# Compute the mean, median, max, min, unique elements.
# Reshape the array to four rows and three columns and name it as reshaped_ ucs420_<your_name>>.
# Resize the array to two rows and three columns and name it as resized_ ucs420_<your_name>>.

import numpy as np

sample = np.array([10,20,30,40,50,60,70,70,90,15,20,35])

ucs420_AryamanGudwani = sample.reshape(3,4)
print("Mean is: " , np.mean(ucs420_AryamanGudwani))
print("Median is: " , np.median(ucs420_AryamanGudwani))
print("Max is: " , np.amax(ucs420_AryamanGudwani))
print("Min is: " , np.amin(ucs420_AryamanGudwani))
print("Unique is: " , np.unique(ucs420_AryamanGudwani))


reshaped_ucs420_AryamanGudwani = ucs420_AryamanGudwani.reshape(4,3)
print(reshaped_ucs420_AryamanGudwani)

resized_ucs420_AryamanGudwani = ucs420_AryamanGudwani.reshape(2,3)
print(resized_ucs420_AryamanGudwani)